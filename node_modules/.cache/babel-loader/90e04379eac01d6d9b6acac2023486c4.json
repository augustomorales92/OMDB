{"ast":null,"code":"import axios from \"axios\";\nimport { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getSingleMoviesRequest = createAsyncThunk(\"MOVIES\", (e, thunkAPI) => {\n  let keycode = e.keyCode;\n\n  if (keycode == '13') {\n    return axios.get(`https://api.themoviedb.org/3/search/movie?api_key=4620455e1c3ab4ab640f78e163013622&query=${e.target.value}`).then(res => res.data).then(firstPage => firstPage.results);\n  }\n});\nconst singleMovieReducer = createReducer([], {\n  [getSingleMoviesRequest.fulfilled]: (state, action) => action.payload\n});\nexport default singleMovieReducer;","map":{"version":3,"sources":["/Users/augustomorales/p5/25-OMDB/src/state/singlemovie.js"],"names":["axios","createReducer","createAsyncThunk","getSingleMoviesRequest","e","thunkAPI","keycode","keyCode","get","target","value","then","res","data","firstPage","results","singleMovieReducer","fulfilled","state","action","payload"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,kBAAhD;AAIA,OAAO,MAAMC,sBAAsB,GAAGD,gBAAgB,CAAC,QAAD,EAAW,CAACE,CAAD,EAAGC,QAAH,KAAgB;AAC7E,MAAIC,OAAO,GAAGF,CAAC,CAACG,OAAhB;;AACA,MAAGD,OAAO,IAAI,IAAd,EAAmB;AACrB,WAAON,KAAK,CACTQ,GADI,CAEF,4FAA2FJ,CAAC,CAACK,MAAF,CAASC,KAAM,EAFxG,EAIJC,IAJI,CAIEC,GAAD,IAASA,GAAG,CAACC,IAJd,EAKJF,IALI,CAKEG,SAAD,IAAcA,SAAS,CAACC,OALzB,CAAP;AAK0C;AAC3C,CATqD,CAA/C;AAYP,MAAMC,kBAAkB,GAAGf,aAAa,CAAC,EAAD,EAAK;AAC3C,GAACE,sBAAsB,CAACc,SAAxB,GAAoC,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADnB,CAAL,CAAxC;AAIA,eAAeJ,kBAAf","sourcesContent":["\nimport axios from \"axios\";\nimport { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n\n\nexport const getSingleMoviesRequest = createAsyncThunk(\"MOVIES\", (e,thunkAPI) => {\n    let keycode = e.keyCode;\n    if(keycode == '13'){\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=4620455e1c3ab4ab640f78e163013622&query=${e.target.value}`\n    )\n    .then((res) => res.data)\n    .then((firstPage) =>firstPage.results) }\n})\n    \n\nconst singleMovieReducer = createReducer([], {\n  [getSingleMoviesRequest.fulfilled]: (state, action) => action.payload,\n});\n\nexport default singleMovieReducer;"]},"metadata":{},"sourceType":"module"}